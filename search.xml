<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Jmeter踩坑：自动化生成测试结果报告]]></title>
    <url>%2F2019%2F03%2F11%2FJmeter%E8%B8%A9%E5%9D%91%EF%BC%9A%E8%87%AA%E5%8A%A8%E5%8C%96%E7%94%9F%E6%88%90%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C%E6%8A%A5%E5%91%8A%2F</url>
    <content type="text"><![CDATA[1. 如何生成测试结果报告？终端执行命令：./jmeter -n -t 要执行的脚本地址.jmx -l 存放jtl结果的地址.jtl -e -o 存放结果报告的文件夹地址 在存放报告的文件夹中index.html就是可视化测试报告。报告如下： 踩坑:该命令要在jmeter的bin目录下执行很多教程都写的是jmeter -n -t开头，实际是./jmeter每次新的测试计划执行都要把之前的结果报告删除，否则新的测试报告不能读入 2. 如何自动化进行？每次都要手动删掉之前的报告，再手动命令，麻烦，自动化脚本走一个。建一个批处理文件，代码如下：（我用的mac，.sh文件，win是.bat，命令可能有差异，但原理就是酱紫）123456789101112#!/bin/sh#删除result.jtlrm -f /Users/xxx/Documents/software/apache-jmeter-4.0/bin/result.jtl#删除ResultReport文件夹rm -rf ResultReport/#新建ResultReport文件夹mkdir ResultReport#执行测试计划./jmeter -n -t /Users/xxx/Documents/Quality/interface_testing/interface.jmx -l /Users/xxx/Documents/software/apache-jmeter-4.0/bin/result.jtl -e -o /Users/xxx/Documents/software/apache-jmeter-4.0/bin/ResultReport 放在bin目录下： 需要执行时，终端在bin目录下：1./jmeter_auto.sh]]></content>
      <categories>
        <category>Jmeter</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Jmeter踩坑：Beanshell断言判断响应是否为JSON格式]]></title>
    <url>%2F2019%2F03%2F10%2FJmeter%E8%B8%A9%E5%9D%91%EF%BC%9ABeanshell%E6%96%AD%E8%A8%80%E5%88%A4%E6%96%AD%E5%93%8D%E5%BA%94%E6%98%AF%E5%90%A6%E4%B8%BAJSON%E6%A0%BC%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[接口测试初期，先确认接口能否跑通，响应状态码为200，以及响应信息是json格式。Jmeter4.0之后新增了JSON Assertion，可以验证响应是不是json格式。但需同时验证响应状态码是否为200以及响应信息是否为json格式，可使用Jmeter工具添加beanshell断言。 下载json.jar，在测试计划中导入jar包 beanshell断言代码如下，可直接复制粘贴： 12345678910111213141516171819202122import org.json.*;//引入jar包String result = prev.getResponseDataAsString();//获取响应信息code=prev.getResponseCode();//获取响应状态码log.info(code);//打印状态码if(!code.equals(&quot;200&quot;))&#123; log.info(&quot;********状态码炸了********&quot;); Failure = true;//断言失败&#125; Object json = new JSONTokener(result).nextValue();//会给出一个对象，然后可以动态的转换为适当的类型if(json instanceof JSONObject)&#123;//判断其左边对象是否为其右边类的实例，返回boolean类型的数据 log.info(&quot;***是一个jsonObject***&quot;); Failure = false;//断言成功&#125;else if (json instanceof JSONArray)&#123; log.info(&quot;***是一个jsonArray***&quot;); Failure = false;//断言成功 &#125;else&#123; log.error(&quot;************不是一个json*************&quot;); Failure = true;//断言失败 &#125; 踩坑：最开始只想到了JSONObject，于是一片报红，后来发现有的响应是JSONArray，添加了对JSON数组的判断]]></content>
      <categories>
        <category>Jmeter</category>
      </categories>
  </entry>
</search>
